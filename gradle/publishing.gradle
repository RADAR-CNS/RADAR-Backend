apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution 'repo'
        }
    }
    developers {
        developer {
            id 'nivemaham'
            name 'Nivethika Mahasivam'
            email 'nivethika@thehyve.nl'
            organization 'The Hyve'
        }
        developer {
            id 'fnobilia'
            name 'Francesco Nobilia'
            email 'francesco.nobilia@kcl.ac.uk'
            organization 'King\'s College London'
        }
        developer {
            id 'blootsvoets'
            name 'Joris Borgdorff'
            email 'joris@thehyve.nl'
            organization 'The Hyve'
        }
    }
    issueManagement {
        system 'GitHub'
        url issueUrl
    }
    organization {
        name 'RADAR-CNS'
        url website
    }
    scm {
        connection 'scm:git:' + githubUrl
        url githubUrl
    }
}

ext.sharedManifest = manifest {
    attributes(
            "Implementation-Title": rootProject.name,
            "Implementation-Version": version)
}

//---------------------------------------------------------------------------//
// Packaging                                                                 //
//---------------------------------------------------------------------------//

processResources {
    expand(version: version)
}

jar {
    manifest {
        from sharedManifest
        attributes('Main-Class': mainClassName)
    }
}

tasks.withType(Tar){
    compression = Compression.GZIP
    extension = 'tar.gz'
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
    manifest.from sharedManifest
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    manifest.from sharedManifest
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        RadarBackendPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId project.group
            artifactId rootProject.name
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', description)
                root.appendNode('name', rootProject.name)
                root.appendNode('url', githubUrl)
                root.dependencies.'*'.findAll() {
                    it.artifactId.text() in ['log4j', 'slf4j-log4j12']
                }.each() {
                    it.parent().remove(it)
                }
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')? System.getenv('BINTRAY_USER') : project.property('bintrayUser')
    key = System.getenv('BINTRAY_API_KEY') ? System.getenv('BINTRAY_API_KEY') : project.property('bintrayApiKey')
    override = false
    publications = ['RadarBackendPublication']
    pkg {
        repo = project.group
        name = rootProject.name
        userOrg = 'radar-cns'
        desc = description
        licenses = ['Apache-2.0']
        websiteUrl = website
        issueTrackerUrl = issueUrl
        vcsUrl = githubUrl
        githubRepo = githubRepoName
        githubReleaseNotesFile = 'README.md'
        version {
            name = project.version
            desc = description
            vcsTag = System.getenv('TRAVIS_TAG')
            released = new Date()
        }
    }
}
